// BUTTON DISABLED STATE
@mixin button-disabled-state() {
    background-color: $button-secondary-border-disabled;
    border-color: $button-secondary-border-disabled;
    pointer-events: none;
}

@mixin global-outline($outline-base: false, $outline-offset: false) {
    &:focus {
        @if $outline-base {
            outline: $base-outline;
        }
        @if $outline-offset {
            outline-offset: $base-outline-offset;
        }
    }
    &.inverted {
        &:focus {
            outline: $inverted-outline;
        }
    }
}

.button {
    max-width: 34ch;
    cursor: pointer;
    display: flex;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    border: $button-default-border;
    border-radius: $button-border-radius;
    font-family: $primary-font-family;
    font-size: $button-font-default;
    font-weight: $button-font-weight;
    margin-top: $buttons-mt;
    align-items: center;
    &--large {
        font-size: $button-font-size-large;
    }
    &--small {
        padding: $button-default-padding;
    }
    @include media-breakpoint-down(md) {
        width: 100%;
        max-width: 100%;
        justify-content: center;
    }

    &--block {
        width: 100%;
        justify-content: center;
        max-width: 100%;
    }

    @include global-outline($base-outline, $base-outline-offset);
    padding: $button-default-padding;
    @include media-breakpoint-down(xl) {
        padding: $button-mobile-padding;
    }
    @include media-breakpoint-down(md) {
        padding: $button-mobile-padding;
    }

    &--primary {
        color: $button-primary-color;
        background-color: $button-primary-bg-color;
        &:hover {
            background-color: $button-primary-bg-hover;
            color: $button-primary-color-hover;
            border-color: $button-primary-bg-hover;
        }
        &:focus {
            background-color: $button-primary-bg-hover;
            color: $button-primary-color-hover;
            @include global-outline;
        }
        &:active {
            background-color: $button-primary-bg-presseed;
            color: $button-primary-color-presseed;
            border-color: $button-primary-bg-presseed;
        }
        &:disabled,
        [disabled] {
            background-color: $button-primary-bg-disabled;
            color: $button-primary-color-disabled;
            border-color: $button-secondary-border-disabled;
        }
        &.inverted {
            &:focus {
                outline: $inverted-outline;
            }
        }
    }
    &--secondary {
        color: $button-secondary-color;
        background-color: $button-secondary-bg-color;
        border: $button-secondary-border;
        &:hover {
            background-color: $button-secondary-bg-hover;
        }
        &:focus {
            background-color: $button-secondary-bg-hover;
            @include global-outline($base-outline, $base-outline-offset);
        }
        &:active {
            background-color: $button-secondary-bg-presseed;
            color: $button-secondary-color-presseed;
            border-color: $button-secondary-bg-presseed;
        }
        &:disabled,
        [disabled] {
            background-color: $button-secondary-bg-disabled;
            color: $button-secondary-color-disabled;
            border-color: $button-secondary-border-disabled;
        }
        &.inverted {
            &:focus {
                outline: $inverted-outline;
            }
        }
    }
    &--ghost {
        color: $button-ghost-color;
        border: $button-ghost-border-color;
        background-color: $button-ghost-bg-color;

        &:hover {
            color: $button-ghost-color-hover;
        }
        &:focus {
            color: $button-ghost-color-hover;
            @include global-outline($base-outline, $base-outline-offset);
        }
        &:active {
            color: $button-ghost-color-presseed;
        }
        &:disabled,
        [disabled] {
            pointer-events: none;
            background-color: $button-ghost-bg-disabled;
            color: $button-ghost-color-disabled;
        }
    }
}

.button-icon {
    &--left {
        margin-right: $button-icon-gap;
    }
    &--right {
        margin-left: $button-icon-gap;
    }
}

.button-group-wrapper {
    display: flex;
    margin-top: $group-buttons-mt;
    flex-wrap: wrap;
    @include media-breakpoint-down(md) {
        width: 100%;
    }
    &__centered {
        display: flex;
        justify-content: center;
        width: 100%;
        flex-wrap: wrap;
        align-items: center;
        margin-right: $group-buttons-space-between;
        .button {
            align-items: center;
            margin-right: $group-buttons-space-between;
            @include media-breakpoint-down(md) {
                width: 100%;
                align-items: center;
                margin-right: 0;
            }
        }
    }
    .button {
        align-items: center;
        margin-right: $group-buttons-space-between;
        @include media-breakpoint-down(md) {
            padding: $button-mobile-padding;
            width: 100%;
            justify-content: center;
            align-items: center;
            margin-right: 0;
        }
    }
}
